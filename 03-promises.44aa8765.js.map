{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,SAASC,cAAc,kBAAkBC,OAC1DC,EAAOJ,SAASC,SAASC,cAAc,iBAAiBC,OACxDE,EAASL,SAASC,SAASC,cAAc,mBAAmBC,OAQlE,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAfTS,MAAMlB,IAAUkB,MAAMb,IAASa,MAAMZ,GACvCa,EAAArB,GAASsB,OAAOC,QAAQ,iDAkB1B,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAQgB,IAC3Bf,EAAce,EAAGtB,GAASsB,EAAI,GAAKjB,GAChCkB,MAAK,EAACf,SAAEA,EAAUS,MAAAO,MACjBL,EAAArB,GAASsB,OAAOK,QAAQ,uBAAqBjB,QAAiBgB,MAAU,IAEzEE,OAAM,EAAClB,SAAEA,EAAUS,MAAAU,MAClBR,EAAArB,GAASsB,OAAOC,QAAQ,sBAAoBb,QAAemB,MAAU,G,CAvB3EC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = parseInt(document.querySelector('[name=\"delay\"]').value);\nconst step = parseInt(document.querySelector('[name=\"step\"]').value);\nconst amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\nif (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n  Notiflix.Notify.failure(\"Please fill in all fields with valid numbers.\");\n} else {\n  createPromises();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises() {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","parseInt","document","querySelector","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","isNaN","$parcel$interopDefault","Notify","failure","i","then","delay2","success","catch","delay3","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.44aa8765.js.map"}