{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,SAASC,cAAc,kBAAkBC,OAC1DC,EAAOJ,SAASC,SAASC,cAAc,iBAAiBC,OACxDE,EAASL,SAASC,SAASC,cAAc,mBAAmBC,OAQlE,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IAfHS,MAAMlB,IAAUkB,MAAMb,IAASa,MAAMZ,GACvCa,EAAArB,GAASsB,OAAOC,QAAQ,iDAkB1B,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAQgB,IAC3Bf,EAAce,EAAGtB,GAASsB,EAAI,GAAKjB,GAChCkB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALP,MACjBE,EAAArB,GAASsB,OAAOM,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANF,EAAM,M,IAEvEG,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUqB,EAAKL,EAALP,MAClBE,EAAArB,GAASsB,OAAOC,QAAQ,sBAAqCM,OAAfnB,EAAS,QAAYmB,OAANE,EAAM,M,IAvBzEC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = parseInt(document.querySelector('[name=\"delay\"]').value);\nconst step = parseInt(document.querySelector('[name=\"step\"]').value);\nconst amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\nif (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n  Notiflix.Notify.failure(\"Please fill in all fields with valid numbers.\");\n} else {\n  createPromises();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises() {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","parseInt","document","querySelector","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","isNaN","$parcel$interopDefault","Notify","failure","i","then","param","delay2","success","concat","catch","delay3","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.f0752dc0.js.map"}